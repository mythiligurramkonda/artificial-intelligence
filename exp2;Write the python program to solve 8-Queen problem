def solve_queens(n):
    board = [-1] * n
    result = []
    def is_valid(row, col):
        for i in range(row):
            if board[i] == col or abs(row - i) == abs(col - board[i]):
                return False
        return True
    def backtrack(row):
        if row == n:
            result.append(list(board))
            return True 
        for col in range(n):
            if is_valid(row, col):
                board[row] = col
                if backtrack(row + 1): 
                    return True
                board[row] = -1
        return False
    backtrack(0)
    return result
solutions = solve_queens(8)
for solution in solutions:
    for row in range(8):
        line = ""
        for col in range(8):
            if solution[row] == col:
                line += "Q "
            else:
                line += "- "
        print(line)
